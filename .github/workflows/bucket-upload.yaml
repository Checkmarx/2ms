on:
    pull_request:
        
jobs:
    bucket-upload-S3:
      runs-on: ubuntu-latest  
  
      steps:
        - uses: actions/checkout@v4
          with:
            ref: ${{ github.event.pull_request.head.sha }}
  
        - uses: actions/setup-go@v5
          with:
            go-version: "^1.22"
  
        - name: Clone 2ms Repository and Checkout Commit SHA
          run: |
            git clone https://github.com/checkmarx/2ms.git $GITHUB_WORKSPACE/2ms
            cd $GITHUB_WORKSPACE/2ms
            git fetch --all
            git checkout ${{ github.event.pull_request.head.sha }}
            go build -o $GITHUB_WORKSPACE/2ms/dist/2ms main.go
            chmod +x $GITHUB_WORKSPACE/2ms/dist/2ms
  
        - name: Load Repos from JSON and Clone Each Repo
          run: |
            curl -o /tmp/repos.json https://raw.githubusercontent.com/cx-miguel-neiva/2ms-github-action/main/repos.json
            REPOS_LIST=$(jq -r '.projects[]' /tmp/repos.json | tr '\n' ' ')
            echo "repos=$REPOS_LIST" >> $GITHUB_ENV
            for repo_url in $REPOS_LIST; do
              repo_name=$(basename "$repo_url" .git)
              mkdir -p "$GITHUB_WORKSPACE/repos/$repo_name"
              git clone "$repo_url" "$GITHUB_WORKSPACE/repos/$repo_name"
            done
  
        - name: Run 2ms Scan for each repo
          run: |
            mkdir -p $GITHUB_WORKSPACE/results
            IFS=' ' read -r -a REPOS_ARRAY <<< "$repos"
            echo "[" > $GITHUB_WORKSPACE/scan_results.json
            for repo_url in "${REPOS_ARRAY[@]}"; do
              repo_name=$(basename "$repo_url" .git)
              result_sarif="$GITHUB_WORKSPACE/results/$repo_name.sarif"
              start_time=$(date +%s.%N)
              if $GITHUB_WORKSPACE/2ms/dist/2ms filesystem --path "$GITHUB_WORKSPACE/repos/$repo_name" --ignore-on-exit results --report-path "$result_sarif"; then
                scan_status="success"
              else
                scan_status="failure"
              fi
              end_time=$(date +%s.%N)
              execution_time=$(echo "$end_time - $start_time" | bc)
              execution_time_formatted=$(printf "%.2f" "$execution_time")
              echo "{
                \"repo_name\": \"$repo_name\",
                \"scan_status\": \"$scan_status\",
                \"execution_time\": \"$execution_time_formatted\"
              }," >> $GITHUB_WORKSPACE/scan_results.json
            done
            sed -i '$ s/,$//' $GITHUB_WORKSPACE/scan_results.json
            echo "]" >> $GITHUB_WORKSPACE/scan_results.json
  
        - name: Upload results to S3
          env:
            AWS_ACCESS_KEY_ID: ${{ secrets.CES_BUCKET_AWS_ACCESS_KEY }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.CES_BUCKET_AWS_SECRET_ACCESS_KEY }}
          run: |
            aws s3 cp --recursive "${{ env.results_dir }}/pr-${{ github.event.number }}" "s3://${{ secrets.CES_AWS_BUCKET }}/${{ env.destination_dir }}" --storage-class STANDARD
  
        - name: Create PR Comment with Job Summary in Table
          uses: peter-evans/create-or-update-comment@v2
          with:
            issue-number: ${{ github.event.pull_request.number }}
            body: |
              ## ðŸ›  Scan Summary
              
              ${{ env.SCAN_RESULTS }}
  