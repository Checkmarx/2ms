name: Release

on:
  workflow_dispatch:
  push:
    branches: [master]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    outputs:
      git_tag: ${{ steps.semantic_release_info.outputs.git_tag }}
      version: ${{ steps.semantic_release_info.outputs.version }}
      notes: ${{ steps.semantic_release_info.outputs.notes }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - uses: actions/setup-go@v4
        with:
          go-version: "^1.20"
      - name: Go Linter
        run: docker run --rm -v $(pwd):/app -w /app golangci/golangci-lint:v1.52.0 golangci-lint run -v -E gofmt --timeout=5m

      - name: Unit Tests
        run: go test ./...

      - name: Gets release info
        id: semantic_release_info
        if: github.event_name == 'workflow_dispatch'
        uses: jossef/action-semantic-release-info@v2.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Build and Release
    runs-on: ubuntu-latest
    needs: test
    if: ${{ needs.test.outputs.git_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - uses: actions/setup-go@v4
        with:
          go-version: "^1.20"

      - name: Go Mod Tidy
        run: go mod tidy

      - name: Go Build
        env:
          VERSION: ${{ needs.test.outputs.version }}
          CGO_ENABLED: 0
          GOOS: linux
          GOARCH: amd64
        run: go build -ldflags "-s -w -X github.com/checkmarx/2ms/cmd.Version=$VERSION" -a -installsuffix cgo -o bin/2ms main.go

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            checkmarx/2ms:latest
            checkmarx/2ms:${{ needs.test.outputs.version }}

      - name: Creating Release
        uses: softprops/action-gh-release@v0.1.15
        with:
          tag_name: ${{ needs.test.outputs.git_tag }}
          name: ${{ needs.test.outputs.git_tag }}
          body: ${{ needs.test.outputs.notes }}
          target_commitish: ${{ steps.commit_and_push.outputs.latest_commit_hash }}
          files: |
            bin/2ms
