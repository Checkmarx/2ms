// Code generated by MockGen. DO NOT EDIT.
// Source: chunk.go
//
// Generated by this command:
//
//	mockgen -source=chunk.go -destination=chunk_mock.go -package=chunk
//

// Package chunk is a generated GoMock package.
package chunk

import (
	bufio "bufio"
	bytes "bytes"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockIChunk is a mock of IChunk interface.
type MockIChunk struct {
	ctrl     *gomock.Controller
	recorder *MockIChunkMockRecorder
	isgomock struct{}
}

// MockIChunkMockRecorder is the mock recorder for MockIChunk.
type MockIChunkMockRecorder struct {
	mock *MockIChunk
}

// NewMockIChunk creates a new mock instance.
func NewMockIChunk(ctrl *gomock.Controller) *MockIChunk {
	mock := &MockIChunk{ctrl: ctrl}
	mock.recorder = &MockIChunkMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIChunk) EXPECT() *MockIChunkMockRecorder {
	return m.recorder
}

// GetBuf mocks base method.
func (m *MockIChunk) GetBuf() (*[]byte, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBuf")
	ret0, _ := ret[0].(*[]byte)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// GetBuf indicates an expected call of GetBuf.
func (mr *MockIChunkMockRecorder) GetBuf() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBuf", reflect.TypeOf((*MockIChunk)(nil).GetBuf))
}

// GetFileThreshold mocks base method.
func (m *MockIChunk) GetFileThreshold() int64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFileThreshold")
	ret0, _ := ret[0].(int64)
	return ret0
}

// GetFileThreshold indicates an expected call of GetFileThreshold.
func (mr *MockIChunkMockRecorder) GetFileThreshold() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFileThreshold", reflect.TypeOf((*MockIChunk)(nil).GetFileThreshold))
}

// GetMaxPeekSize mocks base method.
func (m *MockIChunk) GetMaxPeekSize() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMaxPeekSize")
	ret0, _ := ret[0].(int)
	return ret0
}

// GetMaxPeekSize indicates an expected call of GetMaxPeekSize.
func (mr *MockIChunkMockRecorder) GetMaxPeekSize() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMaxPeekSize", reflect.TypeOf((*MockIChunk)(nil).GetMaxPeekSize))
}

// GetPeekBuf mocks base method.
func (m *MockIChunk) GetPeekBuf(buf []byte) (*bytes.Buffer, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPeekBuf", buf)
	ret0, _ := ret[0].(*bytes.Buffer)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// GetPeekBuf indicates an expected call of GetPeekBuf.
func (mr *MockIChunkMockRecorder) GetPeekBuf(buf any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPeekBuf", reflect.TypeOf((*MockIChunk)(nil).GetPeekBuf), buf)
}

// GetSize mocks base method.
func (m *MockIChunk) GetSize() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSize")
	ret0, _ := ret[0].(int)
	return ret0
}

// GetSize indicates an expected call of GetSize.
func (mr *MockIChunkMockRecorder) GetSize() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSize", reflect.TypeOf((*MockIChunk)(nil).GetSize))
}

// PutBuf mocks base method.
func (m *MockIChunk) PutBuf(buf *[]byte) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "PutBuf", buf)
}

// PutBuf indicates an expected call of PutBuf.
func (mr *MockIChunkMockRecorder) PutBuf(buf any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutBuf", reflect.TypeOf((*MockIChunk)(nil).PutBuf), buf)
}

// PutPeekBuf mocks base method.
func (m *MockIChunk) PutPeekBuf(buf *bytes.Buffer) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "PutPeekBuf", buf)
}

// PutPeekBuf indicates an expected call of PutPeekBuf.
func (mr *MockIChunkMockRecorder) PutPeekBuf(buf any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutPeekBuf", reflect.TypeOf((*MockIChunk)(nil).PutPeekBuf), buf)
}

// ReadChunk mocks base method.
func (m *MockIChunk) ReadChunk(reader *bufio.Reader, totalLines int) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadChunk", reader, totalLines)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ReadChunk indicates an expected call of ReadChunk.
func (mr *MockIChunkMockRecorder) ReadChunk(reader, totalLines any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadChunk", reflect.TypeOf((*MockIChunk)(nil).ReadChunk), reader, totalLines)
}
